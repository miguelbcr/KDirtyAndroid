apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../code_quality_tools/quality.gradle'
apply from: '../fresh_start/fresh_start.gradle'

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
  }
}

android {
  compileSdkVersion 26
  buildToolsVersion '26.0.2'

  defaultConfig {
    applicationId "org.base_app_android"
    minSdkVersion 16
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  signingConfigs {
    release {
      storeFile file("keystore")
      storePassword "storePassword"
      keyAlias "keyAlias"
      keyPassword "keyPassword"
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }

  sourceSets {
    main {
      res.srcDirs =
              [
                      'src/main/res/drawable-svg',
                      'src/main/res/sections/common',
                      'src/main/res/sections/users',
                      'src/main/res/sections/dashboard',
                      'src/main/res/sections',
                      'src/main/res'
              ]
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  flavorDimensions "type"

  productFlavors {
    prod {
      dimension "type"
    }
    mock {
      dimension "type"
      applicationIdSuffix = ".mock"
    }
  }

  // Remove mockRelease as it's not needed.
  android.variantFilter { variant ->
    if (variant.buildType.name == 'release'
            && variant.getFlavors().get(0).name == 'mock') {
      variant.setIgnore(true)
    }
  }

  lintOptions {
    disable 'InvalidPackage'
  }

  packagingOptions {
    pickFirst 'META-INF/rxjava.properties'
  }
}

ext {
  versions = [
          support           : "26.1.0",
          retrofit          : "2.2.0",
          dagger            : "2.11",
          mockery           : "1.0.2",
          leakCanary        : "1.5.1",
          rxbinding         : "2.0.0",
          espresso          : "3.0.1"
  ]
}

kapt {
  generateStubs = true
}

dependencies {
  api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  //Common
  compileOnly "org.glassfish:javax.annotation:10.0-b28"
  kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
  api "com.google.dagger:dagger:${versions.dagger}"
  api 'io.reactivex.rxjava2:rxjava:2.1.1'
  debugCompile "com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}"
  releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakCanary}"
  api 'com.jakewharton.timber:timber:4.5.1'

  //Data layer
  api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
  api "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
  api "com.squareup.retrofit2:converter-gson:${versions.retrofit}"

  api 'com.github.VictorAlbertos.Jolyglot:gson:0.0.3'
  api 'com.github.VictorAlbertos:ReactiveCache:1.1.1-2.x'

  api 'com.google.firebase:firebase-core:11.4.2'
  api 'com.google.firebase:firebase-messaging:11.4.2'
  api 'com.github.VictorAlbertos:RxFcm:0.1.0-2.x'

  api "com.github.VictorAlbertos.Mockery:extension_rx2_retrofit:${versions.mockery}"
  kapt "com.github.VictorAlbertos.Mockery:test_compiler:${versions.mockery}"
  compileOnly "com.github.VictorAlbertos.Mockery:test_runtime:${versions.mockery}"
  compileOnly "junit:junit:4.12"
  compileOnly 'com.google.truth:truth:0.36'

  //Presentation layer
  api "com.android.support:appcompat-v7:${versions.support}"
  //api "com.android.support:support-v13:${versions.support}"
  //api "com.android.support:animated-vector-drawable:${versions.support}"
  api "com.android.support:design:${versions.support}"
  api 'io.reactivex.rxjava2:rxandroid:2.0.1'
  api 'com.squareup.picasso:picasso:2.5.2'
  api("com.afollestad.material-dialogs:core:0.9.4.1") {
    transitive = true
  }
  //api "android.arch.lifecycle:runtime:1.0.0-alpha5"
  kapt "android.arch.lifecycle:compiler:1.0.0-rc1"
  api "android.arch.lifecycle:extensions:1.0.0-rc1"
  //annotationProcessor "android.arch.lifecycle:compiler:1.0.0-alpha5"

  api "com.github.miguelbcr:OkAdapters:0.2.1"
  api "com.jakewharton.rxbinding2:rxbinding-kotlin:${versions.rxbinding}"
  api "com.jakewharton.rxbinding2:rxbinding-design-kotlin:${versions.rxbinding}"


  //Testing
  testCompile 'junit:junit:4.12'
  testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakCanary}"
  testCompile "com.nhaarman:mockito-kotlin:1.5.0"
  testCompile 'com.google.truth:truth:0.36'

  androidTestCompile('com.github.VictorAlbertos:DeviceAnimationTestRule:0.0.2') {
    exclude group: 'com.android.support.test'
  }
  androidTestCompile "com.android.support.test:runner:1.0.1"
  androidTestCompile "com.android.support.test:rules:1.0.1"

  androidTestCompile "com.android.support.test.espresso:espresso-contrib:${versions.espresso}"
  //androidTestCompile "com.android.support.test.espresso:espresso-idling-resource:{versions.espresso}"
  //androidTestCompile "com.android.support.test.espresso:espresso-intents:{versions.espresso}"
}

configurations.all {
  resolutionStrategy.force "com.android.support:support-annotations:${versions.support}"
  resolutionStrategy.force "com.android.support:appcompat-v7:${versions.support}"
  resolutionStrategy.force "com.android.support:support-v13:${versions.support}"
  resolutionStrategy.force "com.android.support:animated-vector-drawable:${versions.support}"
  resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
  //resolutionStrategy.force "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
}

// Works if you put this line at the bottom of this file, nor at the top
apply plugin: 'com.google.gms.google-services'
