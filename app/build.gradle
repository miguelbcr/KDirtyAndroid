apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'android-apt'
apply from: '../code_quality_tools/quality.gradle'
apply from: '../fresh_start/fresh_start.gradle'

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "com.neenbedankt.gradle.plugins:android-apt:1.8"
  }

}

android {
  compileSdkVersion 26
  buildToolsVersion "26.0.1"

  defaultConfig {
    applicationId "org.base_app_android"
    minSdkVersion 16
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  signingConfigs {
    release {
      storeFile file("keystore")
      storePassword "storePassword"
      keyAlias "keyAlias"
      keyPassword "keyPassword"
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }

  sourceSets {
    main {
      res.srcDirs =
              [
                      'src/main/res/drawable-svg',
                      'src/main/res/sections/common',
                      'src/main/res/sections/users',
                      'src/main/res/sections/dashboard',
                      'src/main/res/sections',
                      'src/main/res'
              ]
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  productFlavors {
    prod {
    }
    mock {
      applicationIdSuffix = ".mock"
    }
  }

  // Remove mockRelease as it's not needed.
  android.variantFilter { variant ->
    if (variant.buildType.name.equals('release')
            && variant.getFlavors().get(0).name.equals('mock')) {
      variant.setIgnore(true);
    }
  }

  lintOptions {
    disable 'InvalidPackage'
  }

  packagingOptions {
    pickFirst 'META-INF/rxjava.properties'
  }
}

ext {
  versions = [
          support           : "25.3.1",
          retrofit          : "2.2.0",
          dagger            : "2.11",
          mockery           : "1.0.2",
          leakCanary        : "1.5",
          rxbinding         : "2.0.0"
  ]
}

kapt {
  generateStubs = true
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

  //Common
  provided "org.glassfish:javax.annotation:10.0-b28"
  kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
  compile "com.google.dagger:dagger:${versions.dagger}"
  compile 'io.reactivex.rxjava2:rxjava:2.0.7'
  debugCompile "com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}"
  releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakCanary}"
  compile 'com.jakewharton.timber:timber:4.5.1'

  //Data layer
  compile "com.squareup.retrofit2:retrofit:${versions.retrofit}"
  compile "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"

  compile "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
  compile 'com.github.VictorAlbertos.Jolyglot:gson:0.0.3'
  compile 'com.github.VictorAlbertos:ReactiveCache:1.1.0-2.x'

  compile "com.github.VictorAlbertos.Mockery:extension_rx2_retrofit:${versions.mockery}"
  kapt "com.github.VictorAlbertos.Mockery:test_compiler:${versions.mockery}"
  provided "com.github.VictorAlbertos.Mockery:test_runtime:${versions.mockery}"
  provided "junit:junit:4.12"

  //Presentation layer
  compile "com.android.support:appcompat-v7:${versions.support}"
  compile "com.android.support:design:${versions.support}"
  compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile("com.afollestad.material-dialogs:core:0.9.4.1") {
    transitive = true
  }
  //compile "android.arch.lifecycle:runtime:1.0.0-alpha5"
  kapt "android.arch.lifecycle:compiler:1.0.0-alpha5"
  compile "android.arch.lifecycle:extensions:1.0.0-alpha5"
  //annotationProcessor "android.arch.lifecycle:compiler:1.0.0-alpha5"

  compile "com.github.miguelbcr:OkAdapters:0.2.1"
  compile "com.jakewharton.rxbinding2:rxbinding-kotlin:${versions.rxbinding}"
  compile "com.jakewharton.rxbinding2:rxbinding-design-kotlin:${versions.rxbinding}"

  //Testing
  testCompile 'junit:junit:4.12'
  testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakCanary}"
  testCompile "com.nhaarman:mockito-kotlin:1.3.0"

  androidTestCompile 'com.github.VictorAlbertos:DeviceAnimationTestRule:0.0.2'
  androidTestCompile "com.android.support.test:runner:0.5"
  androidTestCompile "com.android.support.test:rules:0.5"
  androidTestCompile("com.android.support.test.espresso:espresso-contrib:2.2.2") {
    exclude module: 'support-annotations'
    exclude module: 'support-v4'
    exclude module: 'support-v13'
    exclude module: 'recyclerview-v7'
    exclude module: 'appcompat-v7'
    exclude module: 'design'
  }
}

configurations.all {
  resolutionStrategy.force "com.android.support:support-annotations:${versions.support}"
  resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
}

repositories {
  mavenCentral()
}